- Class: meta
  Course: Initiation à R
  Lesson: Manipulations simples
  Author: Elias Bouacida
  Type: Standard
  Organization: Université Paris 8
  Version: 2.4.5
  
- Class: text
  Output: Bienvenue à votre première leçon de R.
    Nous allons apprendre à manipuler R.
    La console affiche un texte de bienvenue suivi d'une ligne commençant par 
    le caractère `>` (l'invite de commande)

- Class: text
  Output: Si vous souhaitez obtenir plus d'information sur un sujet en 
    particulier en lien avec R, vous pouvez taper help.start() dans l'invite de
    commande. 
    Cela ouvrira un menu avec des informations (soit dans votre navigateur par
    défaut, soit dans Rstudio, suivant votre installation).
    Évidemment, vous trouverez aussi des réponses à vos
    questions en faisant une recherche sur internet.

- Class: cmd_question
  Output: L'utilisation la plus basique de R est comme une calculatrice 
    interactive.
    Nous pouvons tout de suite essayer quelques calculs. Tapez 2 + 2 et tapez
    entrée.
  CorrectAnswer: 2 + 2
  AnswerTests: omnitest(correctExpr='2 + 2')
  Hint: Pensez à une calculatrice.

- Class: cmd_question
  Output: Nous avons vu une addition, essayons une soustraction. Tapez 5 - 7.
  CorrectAnswer: 5 - 7
  AnswerTests: omnitest(correctExpr='5-7')
  Hint: Pensez à une calculatrice.

- Class: cmd_question
  Output: Une multiplication. Tapez 4 * 12.
  CorrectAnswer:  4 * 12
  AnswerTests: omnitest(correctExpr='4 * 12')
  Hint: Pensez à une calculatrice.

- Class: cmd_question
  Output: Une division. Tapez -10/3.
  CorrectAnswer:  -10/3
  AnswerTests: omnitest(correctExpr='-10/3')
  Hint: Pensez à une calculatrice.

- Class: cmd_question
  Output: Des puissances. Tapez 5^2.
  CorrectAnswer:  5^2
  AnswerTests: omnitest(correctExpr='5^2')
  Hint: Pensez à une calculatrice.
  
- Class: text
  Output: "Enfin, il peut arriver qu’on saisisse une commande de manière 
    incomplète : oubli d’une parenthèse, faute de frappe, etc.
    Dans ce cas, R remplace l’invite de commande habituel par un signe +."

- Class: text
  Output: "Je ne peux pas vous montrer d'exemple ici, mais sachez que dans ce cas 
    vous avez deux possibilités : compléter la commande ou bien appuyer sur Echap"

- Class: text
  Output: "Nous allons maintenant parler des objets.
    Faire des calculs, c'est bien, mais pouvoir stocker les résultats quelque part
    pour les réutiliser ultérieurement, c'est mieux !
    Pour ce faire, on peut stocker le résultat à l'aide de l'opérateur d'assignation
    `<-`.
    Cette flèche stocke ce qu'il y a à sa droite dans un objet dont le nom est
    indiqué à gauche."
    
- Class: text
  Output: Nous commençons maintenant la partie 'langage de programmation de R'.
    Une possilibité très importante dans tout langage de programmation est la 
    possibilité d'assigner une valeur à un objet (=une variable).
    Cela permet de la sauvegarder pour plus tard.
    Nous pouvons ensuite faire des opérations sur cet objet.

- Class: cmd_question
  Output: Commençons simplement.
    Nous cherchons à assigner à l'objet x la valeur 2.
    L'opérateur d'assignation dans R est la flèche vers la gauche <-.
    Elle symbolise ce qu'elle fait, on assigne à ce qui est à gauche ce qui est 
    à droite.
    Pour assigner 2 à x, il suffit de taper x <- 2.
  CorrectAnswer: x <- 2
  AnswerTests: omnitest(correctExpr='x <- 2')
  Hint: Tapez x <- 2. Il est important d'avoir un espace à gauche
    et à droite de l'opérateur d'assignation, mais NE mettez PAS d'espace entre
    le `<` et le `-` qui forment la flèche.

- Class: cmd_question
  Output: Remarquez que R n'a rien affiché, contrairement à la leçon précédente,
    ou R affichait systématiquement le résultat du calcul. 
    Pour visualiser le contenu d'un objet, il suffit de le taper, suivi 
    d'entrée.
    Nous avons déjà fait cela, sans le savoir, quand on a cherché la valeur de pi.
    Essayez maintenant.
  CorrectAnswer: x
  AnswerTests: omnitest(correctExpr='x')
  Hint: Taper simplement x dans la console, suivi d'entrée.
  
- Class: text
  Output: En résumé, qu'à fait R ?
    R a sauvegardé le résultat de l'opération dans l'objet x.
    Il faut taper l'objet seul pour afficher sa valeur.

- Class: text
  Output: Une remarque importante.
    Il est possible d'utiliser = comme opérateur d'assignation (x = 2 fonctionne
    exactement comme x <- 2) mais c'est généralement considéré comme une 
    mauvaise pratique de code, pour une raison qui vous apparaîtra plus tard.
    Enfin, Rstudio offre un raccourci pour taper <-. 
    C'est généralement  alt gauche + -.
    Je vous encourage à l'utiliser dès maintenant.

- Class: cmd_question
  Output: On peut utiliser les objets dans d'autres opérations.
    R utilisera alors la valeur de l'objet pour faire l'opération demandée.
    Essayez d'additionner 4 à x.
  CorrectAnswer: x+4
  AnswerTests: any_of_exprs('x + 4', '4+x')
  Hint: Tapez x + 4 et appuyez sur entrée. 
    Utiliser x+4 ou x + 4 est une histoire de préférence, mais c'est 
    une bonne habitude de laisser un espace de chaque côté de l'opérateur 
    d'assignation.



- Class: cmd_question
  Output: On peut créer autant d'objet qu'on le souhaite. 
    Créons un objet y qui prend la valeur 5
  CorrectAnswer: y <- 5
  AnswerTests: omnitest(correctExpr='y <- 5')
  Hint: Tapez y <- 5. Il est important d'avoir un espace à gauche
    et à droite de l'opérateur d'assignation, mais NE mettez PAS d'espace entre
    le `<` et le `-` qui forment la flèche.    


- Class: cmd_question
  Output: On peut faire des opérations sur les objets exactement comme on le 
    ferait sur des valeurs, et assigner le résultat.
    Essayez d'additionner x et y et de stocker le résultat dans l'objet resultat.
  CorrectAnswer: resultat <- x + y
  AnswerTests: any_of_exprs('resultat <- x + y', 'resultat <- y + x')
  Hint: Tapez resultat <- x + y et appuyez sur entrée. 

- Class: cmd_question
  Output: Quelle est la valeur de resultat ? Tapez resultat pour le savoir !
  CorrectAnswer: 'resultat'
  AnswerTests: omnitest(correctExpr='resultat')
  Hint: Tapez resultat et appuyez sur Entrée.

- Class: text
  Output: R a fait l'addition sur les objets comme il l'aurait fait sur les
    valeurs.

- Class: text
  Output: Remarquez que le résultat de l'opération ne s'affiche pas dans la 
    première commande.
    Quand on utilise l'opérateur d'assignation, R suppose que l'on souhaite
    utiliser le résultat par la suite, pas qu'il nous intéresse immédiatement.
    Pour lui, la partie importante de l'instruction n'est pas x + y, mais 
    l'assignation du résultat à l'objet resultat.  

  
- Class: cmd_question
  Output: Si on assigne plusieurs  valeurs l'une après l'autre à un unique objet,
    seule la dernière assignation est prise en compte.
    Si maintenant vous tapez x <- 8.
  CorrectAnswer: x <- 8
  AnswerTests: omnitest(correctExpr='x <- 8')
  Hint: Tapez x <- 8
  
- Class: mult_question
  Output: Quelle est la valeur de x ?
  AnswerChoices: 8; 2
  CorrectAnswer: 8
  AnswerTests: omnitest(correctVal='8')
  Hint: Si ce n'est l'un, c'est l'autre !
  
- Class: text
  Output: R écrase la valeur assigné à l'objet x et ne conserve que la dernière
    valeur assignée.

- Class: cmd_question
  Output: Assigner un objet à un autre copie simplement la valeur donnée au 
    premier objet dans le second.
    Essayez d'assigner y à x.
  CorrectAnswer: x <- y
  AnswerTests: omnitest(correctExpr='x <- y')
  Hint: Tapez x <- y.
  
- Class: cmd_question
  Output: Regardez maintenant la valeur de x.
  CorrectAnswer: x
  AnswerTests: omnitest(correctExpr='x')
  Hint: Tapez x.

- Class: text
  Output: x a pris la valeur de y !

- Class: text
  Output: Plusieurs remarques sur les noms d'objets.
    La casse est importante, y et Y sont deux objets différents.
    Un nom d'objet ne peut pas commencer par un chiffre, mais peut en contenir.
    2 n'est pas un nom d'objet, pas plus que 2x, mais x et x2, en revanche, le 
    sont.
    Les caractères spéciaux ne marchent généralement pas dans les noms d'objets,
    en dehors de _ et -.
    deux_poids est un nom d'objet admissible, mais pas deux%poids, par exemple."    
    
- Class: cmd_question
  Output: "On le verra, les objets peuvent contenir tout un tas d’informations.
    Jusqu’ici on n’a stocké que des nombres, mais ils peuvent aussi contenir des
    chaînes de caractères (du texte), qu’on délimite avec des guillemets 
    simples ou doubles (' ou \"). Tapez : chien <- \"Chihuahua\"" 
  CorrectAnswer: chien <- "Chihuahua"
  AnswerTests: omnitest(correctExpr='chien <- "Chihuahua"')
  Hint: "Tapez : chien <- \"Chihuahua\"" 
    
    
    
- Class: text
  Output: Nous allons voir maintenant comment calculer les fonctions
    mathématiques usuelles logarithme, racine carrée, exponentielle et valeur
    absolue.




- Class: cmd_question
  Output: Pour calculer la racine carré, on utilise la commande sqrt(), pour
    square root, l'équivalent en anglais. Tapez sqrt(4).
  CorrectAnswer:  sqrt(4)
  AnswerTests: omnitest(correctExpr='sqrt(4)')
  Hint: Tapez sqrt(4)

- Class: cmd_question
  Output: Essayons maintenant avec la fonction exponentielle. Tapez exp(0).
  CorrectAnswer:  exp(0)
  AnswerTests: omnitest(correctExpr='exp(0)')
  Hint: Tapez exp(0)

- Class: cmd_question
  Output: Essayons maintenant avec la fonction logarithme naturel.
    R est un logiciel de programmation en anglais, il utilise donc la
    convention anglaise.
    Pour obtenir ln(x), il faut taper log(x).
    Cherchez la valeur de ln(2).
  CorrectAnswer: log(2)
  AnswerTests: omnitest(correctExpr='log(2)')
  Hint: Tapez log(2)

- Class: cmd_question
  Output: Pour calculer le log français (logarithme décimal, en base 10), il
    suffit de taper log10.
    Cherchez à obtenir le logarithme décimal de 100.
  CorrectAnswer: log10(100)
  AnswerTests: omnitest(correctExpr='log10(100)')
  Hint: Tapez log10(100)

- Class: cmd_question
  Output: Il y a en fait deux méthodes pour calculer le logarithme en base 10.
    R permet de calculer le logarithme en n'importe quelle base, en utilisant
    log(x, base).
    Voyons voir si vous avez compris.
    Essayez calculer le logarithme en base 8 de 1000
  CorrectAnswer: log(1000, 8)
  AnswerTests: omnitest(correctExpr='log(1000, 8)')
  Hint: Tapez log(1000, 8)

- Class: cmd_question
  Output: R connaît aussi les fonctions trigonométriques.
    Essayez de calculer le sinus de 0.
  CorrectAnswer: sin(0)
  AnswerTests: omnitest(correctExpr='sin(0)')
  Hint: Taper sin(0)

- Class: cmd_question
  Output: Ce qui nous amène naturellement à la constante pi.
    R connaît certaines constantes.
    Essayez de taper pi.
  CorrectAnswer: pi
  AnswerTests: omnitest(correctExpr='pi')
  Hint: Taper pi

- Class: cmd_question
  Output: On peut donc maintenant calculer le cosinus de pi/2.
  CorrectAnswer: cos(pi/2)
  AnswerTests: omnitest(correctExpr='cos(pi/2)')
  Hint: Tapez cos(pi/2)

- Class: cmd_question
  Output: Notez que la constante e (exponentielle) n'existe pas en tant que
    telle dans R.
    Essayer de taper 10e2
  CorrectAnswer: 10e2
  AnswerTests: omnitest(correctExpr='10e2')
  Hint: Tapez 10e2

- Class: mult_question
  Output: e remplace en fait 10^, mais nécessite d'avoir un nombre devant.
    1e2 est une expression valide, mais e2 ne l'est pas.
    Voyons voir si vous avez compris. Que vaut 1e2 ?
  AnswerChoices: 1000; 100; exp(2); 0.01
  CorrectAnswer:  100
  AnswerTests: omnitest(correctVal="100")
  Hint: Pensez à remplacer e par 10^.

- Class: cmd_question
  Output: Revenons à nos constantes, pour obtenir la constante e, il suffit
    d'utiliser la fonction exponentielle. Que vaut e ?
  CorrectAnswer: exp(1)
  AnswerTests: omnitest(correctExpr='exp(1)')
  Hint: Tapez exp(1)

- Class: text
  Output: Félicitations, vous avez maintenant vu les principales opérations 
    mathématiques simples possibles avec R. 
    Vous savez maintenant utiliser R comme une calculatrice collège, mais R 
    est bien plus puissant que cela. 
    La prochaine leçon nous permettra d'aller plus loin.

- Class: mult_question
  Output: Souhaitez-vous soumettre votre progression sur Moodle à votre 
    enseignant (cela ne fonctionnera que pour les étudiants de l'université 
    Paris 8) ?
    Si vous ne le faites pas maintenant, vous pourrez toujours lui envoyer le
    fichier 'Manipulations_simples.txt' qui a été créé plus tard.
  AnswerChoices: Oui;Non
  CorrectAnswer: "Oui"
  AnswerTests: submit_log()
  Hint: Cela soumettra votre avancée dans le cours.
