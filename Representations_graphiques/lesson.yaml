- Class: meta
  Course: Initiation à R
  Lesson: Représentations graphiques
  Author: Elias Bouacida
  Type: Standard
  Organization: Université Paris 8
  Version: 2.4.5

- Class: text
  Output: Une des plus grandes forces de R par rapport à d'autres langages de programmation est la facilité avec laquelle il est possible de créer des graphiques de bonnes qualité.
    Nous allons voir dans cette leçon les bases des représentations graphiques
    dans R.
    Nous allons pour ce faire utiliser la librairie ggplot2. 
    R contient une librairie graphique intégrée, mais celle-ci est relativement
    moins pratique et moins puissante que ggplot2.

- Class: cmd_question
  Output: Chargez la base de données déjà existante mtcars dans R à l'aide de la commande
    data(mtcars).
  CorrectAnswer: data(mtcars)
  AnswerTests: omnitest(correctExpr='data(mtcars)')
  Hint: Tapez data(mtcars) pour charger les données dans R.
  
- Class: text
  Output: Pour voir déjà simplement comment tracer des graphiques, nous allons utiliser 
    des dataframes simples.
    Le but de cette leçon est de vous introduire différents types de représentations
    graphiques et leurs arguments.
    Les données de sorties n'auront peut-être pas l'air très intéressante, mais 
    tout serait plus intéressant avec des données plus larges.
    
- Class: cmd_question
  Output: Affichez l'aide pour le mtcars, à l'aide de help ou ?.
  CorrectAnswer: ?mtcars
  AnswerTests: any_of_exprs('?mtcars', 'help(mtcars)')
  Hint: Tapez ?mtcars ou help(mtcars) pour voir des détails sur le dataframe mtcars.
  
- Class: text
  Output: Vous pouvez voir que le dataframe à 11 variables.
    Nous allons seulement nous intéresser à trois d'entre elles, mpg, cyl et hp.
    
- Class: cmd_question
  Output: Utiliser head() sur mtcars pour voir les premières lignes des données.
  CorrectAnswer: head(mtcars)
  AnswerTests: omnitest(correctExpr='head(mtcars)')
  Hint: Tapez head(mtcars) pour voir les premières lignes des données.
  
- Class: text
  Output: C'est toujours une bonne idée d'avoir une petite idée des données avant
    de travailler dessus. 
    Quelques commandes R sont utiles pour cela, notamment dim(), names(), head(),
    tail() et summary().

- Class: text
  Output: Utilisez une des commandes précédentes (mais pas head()) pour voir ce 
    qu'elle donne.
  CorrectAnswer: summary(mtcars)
  AnswerTests: any_of_exprs('summary(mtcars)', 'dim(mtcars)', 'names(mtcars)', 'tail(mtcars)')
  Hint: Tapez summary(mtcars) pour voir un résumé de chacune des variables.
  

- Class: cmd_question
  Output: On va maintenant utiliser ggplot() pour afficher les données.
    Avant de l'utiliser, mieux vaut regarder comment l'utiliser.
    Tapez ?ggplot pour afficher l'aide sur ggplot.
  CorrectAnswer: ?ggplot
  AnswerTests: any_of_exprs('?ggplot', 'help(ggplot)')
  Hint: Tapez ?ggplot pour afficher l'aide sur ggplot.
  
- Class: cmd_question
  Output: "Pour utiliser ggplot sur mtcars, tapez les commandes suivantes :
    ggplot(mtcars, aes(hp, mpg))."
  CorrectAnswer: ggplot(mtcars, aes(hp, mpg))
  AnswerTests: omnitest(correctExpr='ggplot(mtcars, aes(hp, mpg))')
  Hint: Tapez ggplot(mtcars, aes(hp, mpg)).
  
- Class: text
  Output: Rien ne se passe !
    Analysons d'abord un petit peu ce que nous avons tapé.
    Le premier argument donné à ggplot est la base de donnée à utiliser.
    Nous avons ensuite spécifié un argument aes (=aestethic) avec deux noms de
    variables du dataframe, hp et mpg.
    hp (horsepower) représente la puissance du véhicule, alors que
    mpg (miles per gallon) représente la distance qui peut être parcourue avec un gallon de carburant.
    hp sert de variable pour l'axe x, mpg pour l'axe y.
    Nous n'avons pas explicitement spécifié le noms des arguments, mais nous aurions bien sûr pu le faire
    et écrire aes(x=hp, y=mpg), ce qui aurait donné le même résultat.
    La raison pour laquelle il ne se passe rien est simple.
    Nous n'avons pas donné à ggplot la manière dont doivent être représentées nos données.
    Nous lui avons ce qui doit être représenté, mais nous ne lui avons pas dit
    comment.
    
- Class: cmd_question
  Output: Le mot-clé essentiel pour spécifier comment est geom_ (geométrie).
    Si on veut par exemple représenter les données sous formes de points, 
    on doit utiliser geom_point().
    La syntaxe de ggplot() est telle que nous devons ajouter au graphique l'esthétique.
    Il faut taper ggplot(mtcars, aes(hp, mpg)) + geom_point() pour afficher le graphique.
    Essayez.
  CorrectAnswer: ggplot(mtcars, aes(hp, mpg)) + geom_point()
  AnswerTests: omnitest(correctExpr='ggplot(mtcars, aes(hp, mpg)) + geom_point()')
  Hint: Tapez ggplot(mtcars, aes(hp, mpg)) + geom_point() pour afficher le graphique.  
  
- Class: text
  Output: Remarquez que R a automatiquement donné des noms aux axes.
    Il a utilisé comme nom le nom des colonnes. 
    Il a aussi automatiquement créé des échelles avec des beaux nombres ronds sur les axes.

- Class: cmd_question
  Output: Nous allons voir comment changer différents aspects du graphique.
    Si par exemple nous voulons changer la légende de l'axe des abscisse par puissance, il faut
    ajouter xlab('puissance') à nos commandes précédentes.
    Essayez pour voir.
  CorrectAnswer: ggplot(mtcars, aes(hp, mpg)) + geom_point() + xlab('puissance')
  AnswerTests: omnitest(correctExpr="ggplot(mtcars, aes(hp, mpg)) + geom_point() + xlab('puissance')")
  Hint: Tapez ggplot(mtcars, aes(hp, mpg)) + geom_point(), ajouter ensuite
    xlab('puissance') pour afficher le graphique à l'aide de +.
    
- Class: cmd_question
  Output: On peut de manière similaire ajouter un nom à l'axe des ordonnées.
    Essayez d'ajouter 'autonomie' comme légende à l'axe des ordonnées.
    Conservez la légende de l'axe des abscisses.
  CorrectAnswer: ggplot(mtcars, aes(hp, mpg)) + geom_point() + xlab('puissance') + ylab('autonomie')
  AnswerTests: omnitest(correctExpr="ggplot(mtcars, aes(hp, mpg)) + geom_point() + xlab('puissance') + ylab('autonomie')")
  Hint: La commande pour ajouter une légende à l'axe des ordonnées est ylab().
    N'oubliez pas toutes les commandes précédentes.
